<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylpu.thales.scheduler.dao.SchedulerConnectionMapper" >
  <resultMap id="BaseResultMap" type="com.ylpu.thales.scheduler.entity.SchedulerConnection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="connection_id" property="connectionId" jdbcType="VARCHAR" />
    <result column="connection_type" property="connectionType" jdbcType="VARCHAR" />
    <result column="hostname" property="hostname" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="INTEGER" />
    <result column="db_schema" property="dbSchema" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, connection_id, connection_type, hostname, port, db_schema,username, password, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_thales_scheduler_connection
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="findAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_thales_scheduler_connection where 1=1
    <if test="connectionId != null and connectionId != ''">
          and connection_id like concat(concat('%',#{connectionId}),'%')
    </if>
    ORDER BY create_time DESC
  </select>
  
   <select id = "getConnectionCount" resultType="java.lang.Integer">
      select count(*) from t_thales_scheduler_connection
   </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_thales_scheduler_connection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ylpu.thales.scheduler.entity.SchedulerConnection" >
    insert into t_thales_scheduler_connection (id, connection_id, connection_type, 
      hostname, port, db_schema, username,
      password, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{connectionId,jdbcType=VARCHAR}, #{connectionType,jdbcType=VARCHAR}, 
      #{hostname,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, #{dbSchema,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerConnection" >
    insert into t_thales_scheduler_connection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="connectionId != null" >
        connection_id,
      </if>
      <if test="connectionType != null" >
        connection_type,
      </if>
      <if test="hostname != null" >
        hostname,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test=" dbSchema != null" >
        db_schema,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="connectionId != null" >
        #{connectionId,jdbcType=VARCHAR},
      </if>
      <if test="connectionType != null" >
        #{connectionType,jdbcType=VARCHAR},
      </if>
      <if test="hostname != null" >
        #{hostname,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test=" dbSchema != null" >
        #{dbSchema,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerConnection" >
    update t_thales_scheduler_connection
    <set >
      <if test="connectionId != null" >
        connection_id = #{connectionId,jdbcType=VARCHAR},
      </if>
      <if test="connectionType != null" >
        connection_type = #{connectionType,jdbcType=VARCHAR},
      </if>
      <if test="hostname != null" >
        hostname = #{hostname,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="dbSchema != null" >
        db_schema = #{dbSchema,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylpu.thales.scheduler.entity.SchedulerConnection" >
    update t_thales_scheduler_connection
    set connection_id = #{connectionId,jdbcType=VARCHAR},
      connection_type = #{connectionType,jdbcType=VARCHAR},
      hostname = #{hostname,jdbcType=VARCHAR},
      db_schema = #{dbSchema,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <cache />
</mapper>