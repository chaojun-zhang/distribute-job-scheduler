<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylpu.thales.scheduler.dao.SchedulerWorkerMapper" >
  <resultMap id="BaseResultMap" type="com.ylpu.thales.scheduler.entity.SchedulerWorker" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="worker_type" property="workerType" jdbcType="TINYINT" />
    <result column="host" property="host" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="INTEGER" />
    <result column="worker_group" property="workerGroup" jdbcType="VARCHAR" />
    <result column="zkDirectory" property="zkdirectory" jdbcType="VARCHAR" />
    <result column="cpu_usage" property="cpuUsage" jdbcType="DOUBLE" />
    <result column="memory_usage" property="memoryUsage" jdbcType="DOUBLE" />
    <result column="last_heartbeat_time" property="lastHeartbeatTime" jdbcType="TIMESTAMP" />
    <result column="worker_status" property="workerStatus" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, worker_type, host, port, worker_group, zkDirectory, cpu_usage,memory_usage, last_heartbeat_time, 
    worker_status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_thales_scheduler_worker
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
      select * from t_thales_scheduler_worker where 1=1
            <if test="workerGroup != null and workerGroup != ''">
                and worker_group = #{workerGroup}
            </if>
            <if test="worker != null and worker != ''">
                and host like concat(concat('%',#{worker}),'%')
            </if>
        ORDER BY create_time DESC
  </select>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_thales_scheduler_worker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ylpu.thales.scheduler.entity.SchedulerWorker" >
    insert into t_thales_scheduler_worker (id, worker_type, host, 
      port, worker_group, zkDirectory, 
      cpu_usage,memory_usage,last_heartbeat_time, worker_status, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{workerType,jdbcType=TINYINT}, #{host,jdbcType=VARCHAR}, 
      #{port,jdbcType=INTEGER}, #{workerGroup,jdbcType=VARCHAR}, #{zkdirectory,jdbcType=VARCHAR}, 
      #{cpuUsage,jdbcType=DOUBLE},#{memoryUsage,jdbcType=DOUBLE},#{lastHeartbeatTime,jdbcType=TIMESTAMP}, #{workerStatus,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerWorker" >
    insert into t_thales_scheduler_worker
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="workerType != null" >
        worker_type,
      </if>
      <if test="host != null" >
        host,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="workerGroup != null" >
        worker_group,
      </if>
      <if test="zkdirectory != null" >
        zkDirectory,
      </if>
      <if test="cpuUsage != null" >
        cpu_usage,
      </if>
      <if test="memoryUsage != null" >
        memory_usage,
      </if>
      <if test="lastHeartbeatTime != null" >
        last_heartbeat_time,
      </if>
      <if test="workerStatus != null" >
        worker_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="workerType != null" >
        #{workerType,jdbcType=TINYINT},
      </if>
      <if test="host != null" >
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="workerGroup != null" >
        #{workerGroup,jdbcType=VARCHAR},
      </if>
      <if test="zkdirectory != null" >
        #{zkdirectory,jdbcType=VARCHAR},
      </if>
      <if test="cpuUsage != null" >
        #{cpuUsage,jdbcType=DOUBLE},
      </if>
      <if test="memoryUsage != null" >
        #{memoryUsage,jdbcType=DOUBLE},
      </if>
      <if test="lastHeartbeatTime != null" >
        #{lastHeartbeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workerStatus != null" >
        #{workerStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerWorker" >
    update t_thales_scheduler_worker
    <set >
      <if test="workerType != null" >
        worker_type = #{workerType,jdbcType=TINYINT},
      </if>
      <if test="host != null" >
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="workerGroup != null" >
        worker_group = #{workerGroup,jdbcType=VARCHAR},
      </if>
      <if test="zkdirectory != null" >
        zkDirectory = #{zkdirectory,jdbcType=VARCHAR},
      </if>
      <if test="cpuUsage != null" >
        cpu_usage = #{cpuUsage,jdbcType=DOUBLE},
      </if>
      <if test="memoryUsage != null" >
        memory_usage = #{memoryUsage,jdbcType=DOUBLE},
      </if>
      <if test="lastHeartbeatTime != null" >
        last_heartbeat_time = #{lastHeartbeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workerStatus != null" >
        worker_status = #{workerStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateWorkerByHost" parameterType="com.ylpu.thales.scheduler.entity.SchedulerWorker" >
    update t_thales_scheduler_worker
    <set >
      <if test="workerType != null" >
        worker_type = #{workerType,jdbcType=TINYINT},
      </if>
      <if test="host != null" >
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="workerGroup != null" >
        worker_group = #{workerGroup,jdbcType=VARCHAR},
      </if>
      <if test="zkdirectory != null" >
        zkDirectory = #{zkdirectory,jdbcType=VARCHAR},
      </if>
      <if test="cpuUsage != null" >
        cpu_usage = #{cpuUsage,jdbcType=DOUBLE},
      </if>
      <if test="memoryUsage != null" >
        memory_usage = #{memoryUsage,jdbcType=DOUBLE},
      </if>
      <if test="lastHeartbeatTime != null" >
        last_heartbeat_time = #{lastHeartbeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workerStatus != null" >
        worker_status = #{workerStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where host = #{host,jdbcType=VARCHAR} and worker_group = #{workerGroup,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.ylpu.thales.scheduler.entity.SchedulerWorker" >
    update t_thales_scheduler_worker
    set worker_type = #{workerType,jdbcType=TINYINT},
      host = #{host,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      worker_group = #{workerGroup,jdbcType=VARCHAR},
      zkDirectory = #{zkdirectory,jdbcType=VARCHAR},
      cpu_usage = #{cpuUsage,jdbcType=DOUBLE},
      memory_usage = #{memoryUsage,jdbcType=DOUBLE},
      last_heartbeat_time = #{lastHeartbeatTime,jdbcType=TIMESTAMP},
      worker_status = #{workerStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id = "updateWorkersStatusByGroup" parameterType="java.util.Map">
    update t_thales_scheduler_worker
    set worker_status = #{status,jdbcType=TINYINT} 
    where worker_group = #{groupName,jdbcType=VARCHAR} 
    <if test="workers != null and workers.size > 0">
       and host in
       <foreach collection="workers" index="index" item="worker" open="(" separator="," close=")">  
          #{worker}
       </foreach>
    </if>
  </update>
  <select id = "getWorkersInfoByGroup" parameterType="java.util.Map" resultMap="BaseResultMap">
  select * from t_thales_scheduler_worker where worker_group = #{groupName,jdbcType=VARCHAR} 
     <if test="workers != null and workers.size > 0">
       and host in
       <foreach collection="workers" index="index" item="worker" open="(" separator="," close=")">  
          #{worker}
       </foreach>
     </if>
  </select>
  
 <select id = "getAvailiableWorkerGroup" resultType="java.lang.String">
     select worker_group from t_thales_scheduler_worker where worker_status !=3 group by worker_group
  </select>
  
   <select id = "getAllWorkers" resultType="java.lang.Integer">
      select count(*) from t_thales_scheduler_worker
   </select>
</mapper>