<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylpu.thales.scheduler.dao.SchedulerUserMapper" >
  <resultMap id="BaseResultMap" type="com.ylpu.thales.scheduler.entity.SchedulerUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="confirm_pass" property="confirmPass" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password,confirm_pass,email,create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_thales_scheduler_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="findByUserName" resultMap="ResultMapWithRelations" parameterType="java.lang.String" >
   select u.id,u.user_name,u.password,ur.create_time,u.update_time,u.confirm_pass,u.email,r.id role_id,r.role_name 
    from t_thales_scheduler_user u left join t_thales_scheduler_user_role ur on u.id = ur.user_id left join 
    t_thales_scheduler_role r on ur.role_id = r.id where 1=1
    <if test="userName != null and userName != ''">
        and u.user_name = #{userName,jdbcType=VARCHAR}
    </if>
  </select>
  
  
   <resultMap id="ResultMapWithRelations" type="com.ylpu.thales.scheduler.entity.SchedulerUser" extends="BaseResultMap" >
      <collection property="relations" ofType="com.ylpu.thales.scheduler.entity.UserRoleRelation">
            <result column="role_id" property="roleId"/>
            <result column="role_name" property="roleName"/>
      </collection>
  </resultMap>
  
  <select id="findAll" resultMap="ResultMapWithRelations" parameterType="java.lang.String">
   select u.id,u.user_name,u.password,ur.create_time,u.update_time,u.confirm_pass,u.email,r.id role_id,r.role_name 
    from t_thales_scheduler_user u left join t_thales_scheduler_user_role ur on u.id = ur.user_id left join 
    t_thales_scheduler_role r on ur.role_id = r.id where 1=1
    <if test="userName != null and userName != ''">
        and u.user_name like concat(concat('%',#{userName}),'%')
    </if>
    ORDER BY u.create_time DESC
  </select>
  
  <select id="getUserCount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select count(*)  
    from t_thales_scheduler_user
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_thales_scheduler_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteUserRole" parameterType="java.lang.Integer" >
    delete from t_thales_scheduler_user_role
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertUserRole" parameterType="com.ylpu.thales.scheduler.entity.UserRole" >
    insert into t_thales_scheduler_user_role (user_id, role_id,
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insert" parameterType="com.ylpu.thales.scheduler.entity.SchedulerUser" >
    insert into t_thales_scheduler_user (id, user_name, password,confirm_pass,email, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
     #{confirmPass,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerUser" >
    insert into t_thales_scheduler_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="confirmPass != null" >
        confirm_pass,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="confirmPass != null" >
        #{confirmPass,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylpu.thales.scheduler.entity.SchedulerUser" >
    update t_thales_scheduler_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="confirmPass != null" >
        confirm_pass = #{confirmPass,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylpu.thales.scheduler.entity.SchedulerUser" >
    update t_thales_scheduler_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      confirm_pass = #{confirmPass,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <cache />
</mapper>